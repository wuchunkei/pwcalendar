name: Deploy to Ubuntu ARM Server

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Build client
      run: npm run build
    
    - name: Build server
      run: npx tsc --project tsconfig.server.json
    
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r dist deploy/
        cp package.json deploy/
        cp package-lock.json deploy/
-       cp pwcalendar.service deploy/
+       sed "s/<用戶名>/${{ secrets.USERNAME }}/g" pwcalendar.service > deploy/pwcalendar.service
        cp .env.example deploy/
        
    - name: Deploy to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        source: "deploy/*"
        target: "/home/${{ secrets.USERNAME }}/pwcalendar"
        strip_components: 1
    
    - name: Setup application on server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd ~/pwcalendar
          npm ci --production --legacy-peer-deps
          [ -f .env ] || cp .env.example .env
          sudo cp pwcalendar.service /etc/systemd/system/
          sudo systemctl daemon-reload
          sudo systemctl enable pwcalendar
          sudo systemctl restart pwcalendar
          echo "Deployment completed successfully!"
